<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JS Drum Kit</title>
</head>
<style>
body{
  display: flex;
  flex-direction: row;
  background-image: url("https://hackernoon.com/drafts/y714p2gtp.png");
}
canvas{
  display: block;
  margin: 10px;
  background-color: black;
  flex:1;
}
button{
  background-color: black;
  flex:1;
  text-align: center;
  padding:15px 20px;
  font-size: 25px;
  color: white;
  border-radius: 50%;
  font-weight: bold;
  border-color: gold;
  border-width: medium;
}
button:hover {
  background-color: #CD5C5C; /* Green */
  color: white;
  transform:scale(1.1);
}
.button1{
  margin:6rem 3rem 0.5rem 7.5rem;
}
.button2{
  margin:0.2rem 1rem 0.2rem 2rem;
}
.button4{
  margin:0.2rem 1rem 0.2rem 4.5rem;
}
.button3{
  margin:0.2rem 3rem 4rem 7.5rem;
}
.button5{
  margin-left: 5.2rem;
}
h1{
  visibility: hidden;
  transform: scale(1);
}
</style>
<body onload="startGame()">
<script>

let dead = new Audio();
let up = new Audio();
let right = new Audio();
let left = new Audio();
let down = new Audio();

dead.src = "https://raw.githubusercontent.com/CodeExplainedRepo/Snake-JavaScript/master/audio/dead.mp3";
up.src = "https://raw.githubusercontent.com/CodeExplainedRepo/Snake-JavaScript/master/audio/up.mp3";
right.src = "https://raw.githubusercontent.com/CodeExplainedRepo/Snake-JavaScript/master/audio/right.mp3";
left.src = "https://raw.githubusercontent.com/CodeExplainedRepo/Snake-JavaScript/master/audio/left.mp3";
down.src = "https://raw.githubusercontent.com/CodeExplainedRepo/Snake-JavaScript/master/audio/down.mp3";


var myGamePiece;
var myObstacles = [];
var myScore;

function startGame() {
    myGamePiece = new component(30, 30, "gold", 10, 120);
    myScore = new component("20px", "Consolas", "white", 850, 40, "text");
    myGameArea.start();
}

var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = 1000;
        this.canvas.height = 500;
        this.context = this.canvas.getContext("2d");
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);
        this.frameNo = 0;
        this.interval = setInterval(updateGameArea, 20);
        },
    clear : function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    },
    stop : function() {
        clearInterval(this.interval);
    }
}

function component(width, height, color, x, y, type) {
    this.type = type;
    this.width = width;
    this.height = height;
    this.speedX = 0;
    this.speedY = 0;
    this.x = x;
    this.y = y;
    this.update = function() {
        ctx = myGameArea.context;
        if (this.type == "text") {
            ctx.font = this.width + " " + this.height;
            ctx.fillStyle = color;
            ctx.fillText(this.text, this.x, this.y);
        } else {
            ctx.fillStyle = color;
            ctx.fillRect(this.x, this.y, this.width, this.height);
        }
    }
    this.newPos = function() {
        this.x += this.speedX;
        this.y += this.speedY;
    }
    this.crashWith = function(otherobj) {
        var myleft = this.x;
        var myright = this.x + (this.width);
        var mytop = this.y;
        var mybottom = this.y + (this.height);
        var otherleft = otherobj.x;
        var otherright = otherobj.x + (otherobj.width);
        var othertop = otherobj.y;
        var otherbottom = otherobj.y + (otherobj.height);
        var crash = true;
        if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
            crash = false;
        }
        return crash;
    }
}

function updateGameArea() {
    var x, height, gap, minHeight, maxHeight, minGap, maxGap;
    for (i = 0; i < myObstacles.length; i += 1) {
        if (myGamePiece.crashWith(myObstacles[i])) {
            setTimeout(function(){dead.play()},50)
            myGameArea.stop();
            return;
        }
    }
    myGameArea.clear();
    myGameArea.frameNo += 1;
    if (myGameArea.frameNo == 1 || everyinterval(150)) {
        x = myGameArea.canvas.width;
        minHeight = 20;
        maxHeight = 200;
        height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
        minGap = 50;
        maxGap = 200;
        gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
        myObstacles.push(new component(10, height, "#00FFFF", x, 0));
        myObstacles.push(new component(10, x - height - gap, "#00FFFF", x, height + gap));
    }
    for (i = 0; i < myObstacles.length; i += 1) {
        myObstacles[i].speedX = -1;
        myObstacles[i].newPos();
        myObstacles[i].update();
    }
    myScore.text="SCORE: " + myGameArea.frameNo;
    myScore.update();
    myGamePiece.newPos();
    myGamePiece.update();
}

function everyinterval(n) {
    if ((myGameArea.frameNo / n) % 1 == 0) {return true;}
    return false;
}
function moveup() {
    myGamePiece.speedY = -1;
    up.play();
}

function movedown() {
    myGamePiece.speedY = 1;
    down.play();
}

function moveleft() {
    myGamePiece.speedX = -1;
    left.play();
}

function moveright() {
    myGamePiece.speedX = 1;
    right.play();
}

function clearmove() {
    myGamePiece.speedX = 0;
    myGamePiece.speedY = 0;
}


document.addEventListener("keydown",direction);
document.addEventListener("keyup",clearmove);
function direction(event){
    let key = event.keyCode;
    if( key == 37 ){
        moveleft();
    }else if(key == 38){
        moveup();
    }else if(key == 39 ){
        moveright();
    }else if(key == 40 ){
        movedown();
    }
}
function overgame(){
  setTimeout(function(){window.location.reload()},100)
}
</script>
<div class="pannels">
  <button class="button1" onmousedown="moveup()" onmouseup="clearmove()" ontouchstart="moveup()">&#8593;</button><br><br>
  <button  class="button2" onmousedown="moveleft()" onmouseup="clearmove()" ontouchstart="moveleft()">&#8592;</button>
  <button class="button4" onmousedown="moveright()" onmouseup="clearmove()" ontouchstart="moveright()">&#8594;</button><br><br>
  <button class="button3" onmousedown="movedown()" onmouseup="clearmove()" ontouchstart="movedown()">&#8595;</button><br>
  <button class="button5" onclick="overgame()">RESTART</button>
</div>
</body>
</html>
